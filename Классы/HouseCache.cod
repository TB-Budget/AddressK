--АдресК - расширение функционала по работе с адресами (c) Златовратский Павел(ТБ.Бюджет), 2014

--Данный проект является свободным программным обеспечением. Вы вправе распространять его
--и/или модифицировать в соответствии с условиями версии 2.1 либо по вашему выбору с условиями
--более поздней версии Стандартной Общественной Лицензии Ограниченного Применения GNU,
--опубликованной Free Software Foundation.

--Мы распространяем этот проект в надежде на то, что он будет вам полезен, однако
--НЕ ПРЕДОСТАВЛЯЕМ НА НЕГО НИКАКИХ ГАРАНТИЙ, в том числе ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ
--и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ В КОНКРЕТНЫХ ЦЕЛЯХ. Для получения более подробной информации
--ознакомьтесь со Стандартной Общественной Лицензией Ограниченного Применений GNU.

--Вместе с данным проектом вы должны были получить экземпляр Стандартной Общественной Лицензии
--Ограниченного Применения GNU. Если вы его не получили, сообщите об этом в Software Foundation, Inc.,
--59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

class "Кэш домиков";
import                          Classes Библио;
inclass
var selfref:HouseCache;
  func Create:HouseCache;
    if selfref = nil then
      selfref = inherited Create;
      selfref.cache = Storage.Create;
      selfref.ФИАС = GetFIASObj;
    end;
    Result = selfref;
  end;

inobject
  var cache:Storage;
  var ФИАС:ФИАС_XML_RPC;

  func gethouses(aoguid:String):String[2];
    var i:Integer;
    var ii:Integer;
    var tmpa:Storage[];
    var pairs:String[2];
    if not cache.FieldExist(aoguid) then
        --проверить на переполнение!
        tmpa = ФИАС.GetBuildings(aoguid);
        ii = LengthOfArray(tmpa);
        for i = 1..ii do
            --one =  as Storage;
            pairs[1, i] = tmpa[i].name;
            pairs[2, i] = tmpa[i].guid;
        end;

      cache.SetField(aoguid, pairs);
    end;
    return cache.getField(aoguid) as String[2];
  end;
end